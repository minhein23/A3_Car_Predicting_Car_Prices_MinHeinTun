name: CI/CD Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install pytest mlflow numpy

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t minheintun/ml_a3:latest -f app/Dockerfile .

      - name: Push Docker Image
        run: docker push minheintun/ml_a3:latest

      - name: Set up SSH config
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
      
          cat << 'EOF' > ~/.ssh/config
          Host bazooka
            HostName bazooka.cs.ait.ac.th
            User st125367
            IdentityFile ~/.ssh/id_ed25519
      
          Host mlbrain
            HostName ml.brain.cs.ait.ac.th
            User st125367
            IdentityFile ~/.ssh/id_ed25519
            ProxyJump bazooka
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
          EOF
      
          chmod 600 ~/.ssh/config
          ssh-keyscan -p 22 -H bazooka.cs.ait.ac.th >> ~/.ssh/known_hosts 2>/dev/null
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy to mlbrain
        run: |
          ssh -o "StrictHostKeyChecking=no" st125367@mlbrain << 'EOF'
          cd ~/st125367  # Change to your app directory on the server
          docker compose down
          docker compose pull
          docker compose up -d
          EOF